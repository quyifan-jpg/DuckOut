### install dependencies:

# wget https://github.com/duckdb/duckdb/releases/download/v1.2.0/libduckdb-linux-amd64.zip
# unzip libduckdb-linux-amd64.zip

### RDMA setup:

sudo apt update
sudo apt install rdma-core infiniband-diags ibverbs-utils libibverbs-dev
sudo apt-get install librdmacm-dev libibverbs-dev
sudo apt install autoconf automake libtool
sudo apt-get install libucx-dev ucx-utils

- load $Mellanox# drivers:
sudo modprobe mlx4_ib
sudo modprobe mlx4_en
lsmod | grep mlx



- check devices:
ibv_devinfo

# uxc dependency 
cd ..
git clone https://github.com/openucx/ucx.git
cd ucx
./autogen.sh
./configure --prefix=/usr/local --with-verbs --with-rdmacm
make -j4
sudo make install
cd ../DuckOut
ucx_info -v

# if error:
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
### modify lin: ibp130s0
ip link show $infiniband_interface

sudo ip link set ibp8s0 up
ibp8s0
### The output should show state UP if the interface is now active.


- assign ip node 1:
sudo ip addr add 192.168.100.1/24 dev ibp8s0
sudo ip link set ibp8s0 up

- assign ip node 2:\
sudo ip addr add 192.168.100.2/24 dev ibp8s0
sudo ip link set ibp8s0 up


### perf test
- setup test server:
ib_send_bw -d mlx4_0 -i 1
- run client:
ib_send_bw -d mlx4_0 -i 1 192.168.100.2

### test ucx

# On server (192.168.100.1)
ucx_perftest -d mlx4_0 -t tag_bw

# On client (192.168.100.2)
ucx_perftest -d mlx4_0 -t tag_bw 192.168.100.1

cd ../DuckOut
make
./bin/rdma_uxc -c 192.168.100.1
./bin/rdma_uxc -s 192.168.100.1